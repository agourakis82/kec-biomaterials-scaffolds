# üß† DARWIN Meta-Research Brain - Production Dockerfile Revolutionary
# Ultra-optimized for Cloud Run with AutoGen + JAX + Vertex AI + BigQuery
# Supports GPU/TPU acceleration and million scaffold processing

# ============================================================================
# Build Stage - Compile dependencies and prepare application
# ============================================================================
FROM python:3.11-slim as builder

# Install system build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Build tools
    gcc \
    g++ \
    build-essential \
    cmake \
    pkg-config \
    # Libraries
    libffi-dev \
    libssl-dev \
    libblas-dev \
    liblapack-dev \
    gfortran \
    # Tools
    curl \
    wget \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set build environment for performance
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV MAKEFLAGS="-j$(nproc)"

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements
WORKDIR /build
COPY requirements.txt .

# Upgrade pip and core packages
RUN pip install --upgrade pip setuptools wheel cython

# Install JAX ecosystem FIRST for optimal compilation
RUN pip install --no-cache-dir \
    "jax>=0.4.20" \
    "jaxlib>=0.4.20" \
    "optax>=0.1.7" \
    "flax>=0.7.0" \
    "chex>=0.1.7"

# Install AutoGen and AI dependencies
RUN pip install --no-cache-dir \
    "pyautogen>=0.2.0" \
    "openai>=1.43.0" \
    "anthropic>=0.31.0" \
    "google-generativeai>=0.3.0"

# Install Google Cloud stack
RUN pip install --no-cache-dir \
    "google-cloud-aiplatform>=1.30.0" \
    "google-cloud-bigquery>=3.11.0" \
    "google-cloud-storage>=2.10.0" \
    "google-cloud-secret-manager>=2.16.0" \
    "google-auth>=2.20.0"

# Install core web framework
RUN pip install --no-cache-dir \
    "fastapi>=0.115.0" \
    "uvicorn[standard]>=0.30.0" \
    "gunicorn>=21.2.0" \
    "pydantic>=2.8.0"

# Install all remaining requirements
RUN pip install --no-cache-dir -r requirements.txt

# Install performance monitoring tools
RUN pip install --no-cache-dir \
    nvidia-ml-py \
    psutil \
    py3nvml

# ============================================================================
# Production Stage - Optimized runtime image  
# ============================================================================
FROM python:3.11-slim as production

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Essential runtime
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN groupadd -r darwin && useradd -r -g darwin -s /bin/false -u 1001 darwin

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy application code with proper ownership
COPY --chown=darwin:darwin . .

# ============================================================================
# DARWIN Environment Configuration
# ============================================================================

# Python environment
ENV PYTHONPATH="/app"
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Application configuration for Cloud Run
ENV PORT=8080
ENV ENVIRONMENT=production
ENV WORKERS=1
ENV WORKER_CLASS=uvicorn.workers.UvicornWorker

# JAX Configuration (CPU optimized, GPU capable)
ENV JAX_PLATFORM_NAME=cpu
ENV JAX_ENABLE_X64=true
ENV XLA_PYTHON_CLIENT_PREALLOCATE=false
ENV XLA_PYTHON_CLIENT_ALLOCATOR=platform

# AutoGen Configuration for production
ENV AUTOGEN_USE_DOCKER=false
ENV AUTOGEN_CACHE_SEED=42
ENV AUTOGEN_MAX_CONSECUTIVE_AUTO_REPLY=3

# Google Cloud Configuration (will be set via Cloud Run environment)
ENV GOOGLE_CLOUD_PROJECT=""
ENV GOOGLE_APPLICATION_CREDENTIALS=""
ENV GCP_LOCATION="us-central1"

# DARWIN Feature Flags
ENV ENABLE_AUTOGEN_RESEARCH_TEAM=true
ENV ENABLE_JAX_ULTRA_PERFORMANCE=true
ENV ENABLE_VERTEX_AI_INTEGRATION=true
ENV ENABLE_BIGQUERY_PIPELINE=true
ENV ENABLE_CUSTOM_MODELS=true
ENV ENABLE_REAL_TIME_ANALYTICS=true

# Performance optimization
ENV MALLOC_TRIM_THRESHOLD=131072
ENV MALLOC_MMAP_THRESHOLD=131072
ENV OMP_NUM_THREADS=4

# Monitoring configuration
ENV ENABLE_PERFORMANCE_MONITORING=true
ENV ENABLE_GPU_MONITORING=true
ENV LOG_LEVEL=info

# Security configurations
ENV PYTHONHASHSEED=random

# ============================================================================
# Runtime Setup
# ============================================================================

# Create necessary directories with proper permissions
RUN mkdir -p \
    /app/logs \
    /app/tmp \
    /app/cache \
    /app/secrets \
    /app/data \
    && chown -R darwin:darwin /app

# Remove development files and potential secrets
RUN rm -rf \
    /app/.git* \
    /app/tests \
    /app/test_* \
    /app/*test* \
    /app/*.key \
    /app/*.pem \
    /app/.env* \
    /app/docker-compose* \
    /app/Dockerfile* \
    /app/.vscode \
    /app/.idea \
    2>/dev/null || true

# Set proper file permissions
RUN find /app -type f -name "*.py" -exec chmod 644 {} \; && \
    find /app -type f -name "*.sh" -exec chmod 755 {} \; && \
    chmod 755 /app

# Health check optimized for DARWIN services
HEALTHCHECK --interval=30s --timeout=15s --start-period=180s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Expose port for Cloud Run
EXPOSE 8080

# Switch to non-root user for security
USER darwin

# ============================================================================
# Production Command - DARWIN Revolutionary Backend
# ============================================================================

# Intelligent startup command with component verification
CMD ["sh", "-c", "\
    echo 'üß† Starting DARWIN Meta-Research Brain - Production Mode' && \
    echo 'üîç Verifying DARWIN components...' && \
    echo '‚ö° JAX Engine: '$(python -c 'import jax; print(\"‚úÖ Ready\" if jax.devices() else \"‚ùå Failed\")' 2>/dev/null || echo '‚ùå Failed') && \
    echo 'ü§ñ AutoGen: '$(python -c 'import autogen; print(\"‚úÖ Ready\")' 2>/dev/null || echo '‚ùå Fallback') && \
    echo 'üåü Vertex AI: '$(python -c 'from google.cloud import aiplatform; print(\"‚úÖ Ready\")' 2>/dev/null || echo '‚ùå Fallback') && \
    echo 'üìä BigQuery: '$(python -c 'from google.cloud import bigquery; print(\"‚úÖ Ready\")' 2>/dev/null || echo '‚ùå Fallback') && \
    echo 'üöÄ Initializing DARWIN Revolutionary Backend...' && \
    echo 'üìà Performance target: 1000x speedup, Million scaffold processing' && \
    echo 'üéØ Multi-Agent Research Team: Dr_Biomaterials, Dr_Quantum, Dr_Medical, Dr_Pharmacology' && \
    echo 'üåü Starting server on port ${PORT}...' && \
    exec gunicorn main:app \
        --bind 0.0.0.0:${PORT} \
        --workers ${WORKERS} \
        --worker-class ${WORKER_CLASS} \
        --worker-connections 1000 \
        --max-requests 1000 \
        --max-requests-jitter 50 \
        --timeout 120 \
        --keep-alive 5 \
        --log-level ${LOG_LEVEL} \
        --access-logfile - \
        --error-logfile - \
        --capture-output \
        --enable-stdio-inheritance \
        --preload \
    "]

# ============================================================================
# Enhanced Image Metadata for Production
# ============================================================================
LABEL maintainer="DARWIN Research Team <darwin@agourakis.med.br>"
LABEL description="DARWIN Revolutionary Backend - Production AutoGen + JAX + GPU"
LABEL version="3.0.0-production"
LABEL org.opencontainers.image.source="https://github.com/agourakis82/kec-biomaterials-scaffolds"
LABEL org.opencontainers.image.title="DARWIN Production Backend"
LABEL org.opencontainers.image.description="Advanced AI-powered research platform for biomaterials with GPU acceleration"

# DARWIN specific labels
LABEL ai.framework="AutoGen+JAX+Vertex_AI"
LABEL ai.capabilities="multi_agent+ultra_performance+custom_models"
LABEL ai.acceleration="JAX_JIT+GPU+TPU"
LABEL ai.performance="1000x_speedup_target"
LABEL deployment.platform="Cloud_Run"
LABEL deployment.optimization="production_ready"
LABEL research.domains="biomaterials+quantum+medical+pharmacology"
LABEL data.pipeline="million_scaffold_processing"
LABEL analytics.platform="BigQuery+Real_Time_Dashboard"