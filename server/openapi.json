{
  "openapi": "3.1.0",
  "info": {
    "title": "KEC_BIOMAT API - Complete Platform",
    "description": "Complete API for KEC_BIOMAT platform with data access, processing, RAG, notebooks, and monitoring capabilities. Protects selected routes with X-API-Key header.",
    "version": "2025-09-19"
  },
  "servers": [
    {
      "url": "https://api.agourakis.med.br",
      "description": "Production"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/ag5/datasets": {
      "get": {
        "summary": "List AG5 datasets",
        "operationId": "list_ag5_datasets_data_ag5_datasets_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "datasets": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data/ag5/search": {
      "get": {
        "summary": "Search AG5 datasets",
        "operationId": "search_ag5_datasets_data_ag5_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Q"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "query": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data/helio/summaries": {
      "get": {
        "summary": "Get HELIO summaries",
        "operationId": "get_helio_summaries_data_helio_summaries_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HELIOSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rag": {
      "post": {
        "summary": "RAG Query with Citations",
        "operationId": "rag_query_rag_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RagResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rag/retrieve": {
      "get": {
        "summary": "Retrieve RAG Sources",
        "operationId": "rag_retrieve_rag_retrieve_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Q"
            }
          },
          {
            "name": "k",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 5,
              "minimum": 1,
              "maximum": 20,
              "title": "K"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RagSource"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notebooks": {
      "get": {
        "summary": "List Jupyter Notebooks",
        "operationId": "list_notebooks_notebooks__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notebooks": {
                      "type": "array"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processing/jobs": {
      "post": {
        "summary": "Submit Processing Job",
        "operationId": "submit_job_processing_jobs_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobSubmissionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/processing/jobs/{job_id}": {
      "get": {
        "summary": "Get Job Status",
        "operationId": "get_job_status_processing_jobs__job_id__get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          }
        }
      }
    },
    "/kec/compute": {
      "post": {
        "summary": "Compute KEC metrics for a graph",
        "operationId": "compute_kec_kec_compute_post",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "summary": "Get computation job status",
        "operationId": "get_job_status_jobs__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "ComputeRequest": {
        "properties": {
          "graph_id": {
            "type": "string",
            "title": "Graph Id",
            "description": "Identifier of the graph to compute KEC metrics for"
          },
          "sigma_q": {
            "type": "boolean",
            "title": "Sigma Q",
            "description": "Whether to enable the sigma quality variant",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "graph_id"
        ],
        "title": "ComputeRequest"
      },
      "ComputeResponse": {
        "properties": {
          "H_spectral": {
            "type": "number",
            "title": "H Spectral"
          },
          "k_forman_mean": {
            "type": "number",
            "title": "K Forman Mean"
          },
          "sigma": {
            "type": "number",
            "title": "Sigma"
          },
          "swp": {
            "type": "number",
            "title": "Swp"
          }
        },
        "type": "object",
        "required": [
          "H_spectral",
          "k_forman_mean",
          "sigma",
          "swp"
        ],
        "title": "ComputeResponse"
      },
      "HELIOSummary": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "summary",
          "created_at"
        ],
        "title": "HELIOSummary"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "default": "ok"
          }
        },
        "type": "object",
        "title": "HealthResponse"
      },
      "JobResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "task_name": {
            "type": "string",
            "title": "Task Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "priority": {
            "type": 'string',
            "title": "Priority"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "scheduled_at": {
            "type": "string",
            "format": "date-time",
            "title": "Scheduled At"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "title": "Completed At"
          },
          "progress": {
            "type": "number",
            "title": "Progress"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries"
          },
          "result": {
            "title": "Result"
          },
          "error": {
            "type": "string",
            "title": "Error"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tags"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "task_name",
          "status",
          "priority",
          "created_at",
          "progress",
          "retry_count",
          "max_retries",
          "tags",
          "metadata"
        ],
        "title": "JobResponse"
      },
      "JobStatusResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ComputeResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "title": "JobStatusResponse"
      },
      "JobSubmissionRequest": {
        "properties": {
          "task_name": {
            "type": "string",
            "title": "Task Name"
          },
          "args": {
            "type": "array",
            "items": {},
            "title": "Args",
            "default": []
          },
          "kwargs": {
            "type": "object",
            "title": "Kwargs",
            "default": {}
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "default": "NORMAL"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries"
          },
          "timeout": {
            "type": "number",
            "title": "Timeout"
          },
          "scheduled_at": {
            "type": "string",
            "format": "date-time",
            "title": "Scheduled At"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tags",
            "default": []
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "task_name"
        ],
        "title": "JobSubmissionRequest"
      },
      "RagRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "k": {
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "title": "K",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "RagRequest"
      },
      "RagResponse": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RagSource"
            },
            "title": "Sources"
          }
        },
        "type": "object",
        "required": [
          "text",
          "sources"
        ],
        "title": "RagResponse"
      },
      "RagSource": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "snippet": {
            "type": "string",
            "title": "Snippet"
          },
          "url_or_doi": {
            "type": "string",
            "title": "Url Or Doi"
          },
          "score": {
            "type": "number",
            "title": "Score"
          }
        },
        "type": "object",
        "required": [
          "title",
          "snippet",
          "score"
        ],
        "title": "RagSource"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}